  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5434:5432"
    volumes:
      - ./infra/postgres/init:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.4.4
    hostname: kafka-connect
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      # Basic Configuration
      CONNECT_BOOTSTRAP_SERVERS: "kafka-0:1092,kafka-1:2092"
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster


      # Storage Topics
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 2
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 2
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 2

      # Converters
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"

      # Security Configuration
      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin";'

      # SSL Configuration
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: password
      CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.pkcs12
      CONNECT_SSL_KEYSTORE_PASSWORD: password
      CONNECT_SSL_KEY_PASSWORD: password
      CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""

      # Producer/Consumer Security
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
      CONNECT_PRODUCER_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin";'
      CONNECT_PRODUCER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      CONNECT_PRODUCER_SSL_TRUSTSTORE_PASSWORD: password

      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin";'
      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: password

      # Plugin Path
      CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars"
      CONNECT_PLUGIN_DISCOVERY: "false"

      KAFKA_OPTS: "
          -Dorg.reflections.includePackages=
          -Dorg.reflections.excludePackages=*
          -Dreflections.scan.includePackages=
          -Dreflections.scan.excludePackages=*
        "

    volumes:
      - ./cert/kafka-0-creds:/etc/kafka/secrets
      - ./connectors:/etc/kafka-connect/jars
    networks:
      - yandex-practicum-kafka
    depends_on:
      - kafka-0
      - kafka-1
      - schema-registry
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/connectors" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 90s

  prometheus:
    image: prom/prometheus:v2.30.3
    ports:
      - 9090:9090
    volumes:
      - ./infra/prometheus:/etc/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml
    links:
      - kafka-connect
    depends_on:
      - kafka-connect
    networks:
      - yandex-practicum-kafka

  grafana:
    build:
      context: infra/grafana
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    networks:
      - yandex-practicum-kafka

  debezium-ui:
    image: quay.io/debezium/debezium-ui
    container_name: debezium-ui
    restart: unless-stopped
    ports:
      - "8060:8060"
    environment:
      - KAFKA_CONNECT_URIS=http://kafka-connect:8083
      - PROXY_FRONTEND_URL=http://localhost:8060
    networks:
      - yandex-practicum-kafka
    depends_on:
      kafka-connect:
        condition: service_healthy